Starting on 6-20 at 11:41:38
Question q1
===========
*** PASS: test_cases/q1/beats1.test
	beats('rock','scissors') returns True if gesture1 beats gesture2; False otherwise
*** PASS: test_cases/q1/beats2.test
	beats('scissors','rock') returns True if gesture1 beats gesture2; False otherwise
*** PASS: test_cases/q1/beats3.test
	beats('paper','rock') returns True if gesture1 beats gesture2; False otherwise
*** PASS: test_cases/q1/isValidGesture1.test
	isValidGesture('rock') returns True if gesture is one of 'rock' 'paper' or 'scissors'; False otherwise
*** FAIL: test_cases/q1/isValidGesture2.test
	isValidGesture('spock') must return True if gesture is one of 'rock' 'paper' or 'scissors'; False otherwise
	student result: True
	correct result: False
*** FAIL: Exception raised: unsupported operand type(s) for +: 'int' and 'str'
*** 
*** Traceback (most recent call last):
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/grading.py", line 76, in grade
***     util.TimeoutFunction(getattr(gradingModule, q),300)(self) # Call the question's function
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/util.py", line 620, in __call__
***     result = self.function(*args, **keyArgs)
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/autograder.py", line 295, in <lambda>
***     f= lambda grades: question.execute(grades)
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/testClasses.py", line 127, in execute
***     grades.addPoints(sum([int(case.weight) for case, f in self.testCases if f(grades)==True]))
*** TypeError: unsupported operand type(s) for +: 'int' and 'str'
*** 

### Question q1: 0/5 ###

Question q2
===========
*** PASS: test_cases/q2/isPalindrome1.test
	isPalindrome('pepe') returns True if word is a palindrome; False otherwise
*** PASS: test_cases/q2/isPalindrome2.test
	isPalindrome('homestuck') returns True if word is a palindrome; False otherwise
*** PASS: test_cases/q2/isPalindrome3.test
	isPalindrome('civic') returns True if word is a palindrome; False otherwise
*** PASS: test_cases/q2/isPalindrome4.test
	isPalindrome('Noon') returns True if word is a palindrome; False otherwise
*** PASS: test_cases/q2/isTopRow1.test
	isTopRow('pretty') returns True if word uses only letters on the first row of the keyboard; False otherwise
*** PASS: test_cases/q2/isTopRow2.test
	isTopRow('TyPeWrItEr') returns True if word uses only letters on the first row of the keyboard; False otherwise
*** PASS: test_cases/q2/isTopRow3.test
	isTopRow('jessica jones') returns True if word uses only letters on the first row of the keyboard; False otherwise
*** PASS: test_cases/q2/scrabbleScore1.test
	scrabbleScore('juxtapose') returns the scrabble value (int) of the word
*** PASS: test_cases/q2/scrabbleScore2.test
	scrabbleScore('quiz') returns the scrabble value (int) of the word
*** PASS: test_cases/q2/scrabbleScore3.test
	scrabbleScore('Wellesley') returns the scrabble value (int) of the word
*** PASS: test_cases/q2/scrabbleScore4.test
	scrabbleScore('Dyonisus') returns the scrabble value (int) of the word
*** FAIL: Exception raised: unsupported operand type(s) for +: 'int' and 'str'
*** 
*** Traceback (most recent call last):
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/grading.py", line 76, in grade
***     util.TimeoutFunction(getattr(gradingModule, q),300)(self) # Call the question's function
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/util.py", line 620, in __call__
***     result = self.function(*args, **keyArgs)
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/autograder.py", line 295, in <lambda>
***     f= lambda grades: question.execute(grades)
***   File "/Users/dkreimer/Desktop/cs111grader/simplefunctions/testClasses.py", line 127, in execute
***     grades.addPoints(sum([int(case.weight) for case, f in self.testCases if f(grades)==True]))
*** TypeError: unsupported operand type(s) for +: 'int' and 'str'
*** 

### Question q2: 0/11 ###

Finished at 11:41:38
Provisional grades
==================
Question q1: 0/5
Question q2: 0/11
------------------
Total: 0/16

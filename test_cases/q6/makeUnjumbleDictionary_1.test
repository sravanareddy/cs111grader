class: "EvalTest"
success: "makeUnjumbleDictionary('tinyWordList.txt') returns {'acerst':['caster','caters','crates','reacts','recast','traces'],'aegilnrt':['alerting','altering','integral','relating','triangle'],'aeglr':['glare','lager','large','regal'],'aeinrrst':['restrain','retrains','strainer','terrains','trainers'],'arst':['arts','rats','star','tars','tsar'],'chiiinorsst':['histrionics','trichinosis'],'opst':['opts','post','pots','spot','stop','tops']}"
failure: "makeUnjumbleDictionary('tinyWordList.txt') must return {'acerst':['caster','caters','crates','reacts','recast','traces'],'aegilnrt':['alerting','altering','integral','relating','triangle'],'aeglr':['glare','lager','large','regal'],'aeinrrst':['restrain','retrains','strainer','terrains','trainers'],'arst':['arts','rats','star','tars','tsar'],'chiiinorsst':['histrionics','trichinosis'],'opst':['opts','post','pots','spot','stop','tops']}"

# A python expression to be evaluated.  This expression must return the
# same result for the student and instructor's code.
test: "unjumble.makeUnjumbleDictionary('tinyWordList.txt')"
weight: "3"